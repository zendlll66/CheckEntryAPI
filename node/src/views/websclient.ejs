<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>WebSocket Chat</title>
  <style>
    body {
      font-family: sans-serif;
      padding: 20px;
      background: #f4f4f4;
    }
    #chat-box {
      width: 100%;
      height: 300px;
      border: 1px solid #ccc;
      background: white;
      overflow-y: auto;
      padding: 10px;
      margin-bottom: 10px;
    }
    input, button {
      padding: 8px;
      font-size: 1em;
    }
    .input-row {
      margin-bottom: 10px;
    }
  </style>
</head>
<body>

  <h2>🧑‍💻 WebSocket Chat</h2>

  <div class="input-row">
    <label>Socket URL:</label>
    <input type="text" id="urlInput" value="ws://bstsoft.duckdns.org:19000" style="width: 60%;">
  </div>

  <div class="input-row">
    <label>Token:</label>
    <input type="text" id="tokenInput" placeholder="Paste JWT token here" style="width: 60%;">
  </div>

  <button onclick="connect()">🔌 Connect</button>

  <div id="status" style="margin: 10px 0; color: green;"></div>

  <div id="chat-box"></div>

  <div class="input-row">
    <input type="text" id="messageInput" placeholder="Type your message..." style="width: 70%;">
    <button onclick="clearMessage()">🧹 Clear</button>
    <button onclick="sendMessage()">📤 Send</button>
  </div>

  <script src="https://cdn.socket.io/4.7.2/socket.io.min.js"></script>
  <script>
    let socket;

    function connect() {
      const url = document.getElementById('urlInput').value;
      const token = document.getElementById('tokenInput').value;

      if (!url || !token) {
        alert('Please enter both WebSocket URL and Token');
        return;
      }

      socket = io(url, {
        auth: { token },
        transports: ['websocket']
      });

      socket.on('connect', () => {
        logMessage(`✅ Connected to ${url}`);
        document.getElementById('status').innerText = 'Connected';
      });

      socket.on('message', (msg) => {
        logMessage(`💬 ${msg}`);
      });

      socket.on('connect_error', (err) => {
        logMessage(`❌ Connection error: ${err.message}`, true);
        document.getElementById('status').innerText = 'Connection error';
      });

      socket.on('disconnect', (reason) => {
        logMessage(`🔌 Disconnected: ${reason}`);
        document.getElementById('status').innerText = 'Disconnected';
      });
    }

    function sendMessage() {
      const msg = document.getElementById('messageInput').value;
      if (!msg || !socket?.connected) return;

      socket.emit('chat-message', {
        message: msg,
        email: 'you@example.com' // สามารถดึงจาก JWT แท้จริงได้จาก server
      });

      logMessage(`🧑‍💻 You: ${msg}`);
      document.getElementById('messageInput').value = '';
    }

    function clearMessage()
    {
      const box = document.getElementById('chat-box');
      box.innerHTML = '';
    }

    function logMessage(msg, isError = false) {
      const box = document.getElementById('chat-box');
      const line = document.createElement('div');
      line.textContent = msg;
      if (isError) line.style.color = 'red';
      box.appendChild(line);
      box.scrollTop = box.scrollHeight;
    }
  </script>

</body>
</html>
